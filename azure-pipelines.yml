jobs:
- job: BuildLibrary
  pool:
  vmImage: ubuntu-16.04

  variables:
    buildConfiguration: Release

  steps:
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: src
        verbose: false

    - task: Npm@1
      displayName: 'npm build'
      inputs:
        command: custom
        workingDir: src
        verbose: false
        customCommand: 'run build'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '2.2.401'

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: restore

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: build
        arguments: '-c $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: 'tests/**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Pack'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        command: pack
        configuration: $(buildConfiguration)
        packagesToPack: 'src/*.csproj'
        nobuild: true
        arguments: '-o $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifact'
      inputs:
        artifactName: 'package'
- job: PublishSamples-Toastr
  pool:
    vmImage: ubuntu-16.04
  
  variables:
    buildConfiguration: Release
  
  steps:
    - task:
      bash: cd samples/Toastr

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '2.2.401'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'toastr'
- job: PublishSamples-Noty
  pool:
    vmImage: ubuntu-16.04
  
  variables:
    buildConfiguration: Release
  
  steps:
    - task:
      bash: cd samples/Noty

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '2.2.401'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'noty'


